{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["// Alte FaceMesh API\r\nimport \"@mediapipe/face_mesh\";\r\n\r\n// Neue FaceLandmarker API\r\nimport {\r\n  FaceLandmarker,\r\n  FilesetResolver,\r\n  FaceLandmarkerResult,\r\n} from \"@mediapipe/tasks-vision\";\r\n\r\nimport autoBind from \"auto-bind\";\r\nimport { JsPsych, JsPsychExtension, JsPsychExtensionInfo } from \"jspsych\";\r\nimport { Euler, Matrix4, Vector3 } from \"three\";\r\n\r\ninterface IFaceTrackingResult {\r\n  frame_id: number;\r\n  transformation?: number[];\r\n  rotation?: Euler;\r\n  translation?: Vector3;\r\n  blendshapes?: Array<{ name: string; score: number }>;\r\n}\r\n\r\nclass MediapipeFacemeshExtension implements JsPsychExtension {\r\n  static info: JsPsychExtensionInfo = {\r\n    name: \"mediapipe-face-mesh\",\r\n  };\r\n\r\n  private recordedChunks = new Array<IFaceTrackingResult>();\r\n  private animationFrameId: number;\r\n  public mediaStream: MediaStream;\r\n  private videoElement: HTMLVideoElement;\r\n  private canvasElement: HTMLCanvasElement;\r\n\r\n  // Alte API\r\n  private faceMesh: FaceMesh;\r\n  // Neue API\r\n  private faceLandmarker: FaceLandmarker;\r\n  private usingNewAPI = false;\r\n\r\n  private onResultCallbacks = new Array<(ITrackingResult) => void>();\r\n  private recordTracks = false;\r\n\r\n  constructor(private jsPsych: JsPsych) {\r\n    autoBind(this);\r\n  }\r\n\r\n  initialize = async (params): Promise<void> => {\r\n    this.usingNewAPI = params?.useFaceLandmarker ?? false;\r\n\r\n    if (this.usingNewAPI) {\r\n      // Neue Face Landmarker API\r\n      const vision = await FilesetResolver.forVisionTasks(\r\n        \"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@latest/wasm\"\r\n      );\r\n\t\tthis.faceLandmarker = await FaceLandmarker.createFromOptions(vision, {\r\n\t\t  baseOptions: {\r\n\t\t\tmodelAssetPath:\r\n\t\t\t  \"https://storage.googleapis.com/mediapipe-models/face_landmarker/face_landmarker/float16/latest/face_landmarker.task\",\r\n\t\t  },\r\n\t\t  runningMode: \"VIDEO\",             // <-- WICHTIG fÃ¼r Video-Streams\r\n\t\t  outputFaceBlendshapes: true,\r\n\t\t  outputFacialTransformationMatrixes: true,\r\n\t\t  numFaces: 1,\r\n\t\t});\r\n    } else {\r\n      // Alte FaceMesh API\r\n      this.faceMesh = new FaceMesh({\r\n        locateFile:\r\n          params?.locateFile ??\r\n          function (file) {\r\n            return `https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh/${file}`;\r\n          },\r\n      });\r\n\r\n      this.faceMesh.setOptions({\r\n        maxNumFaces: 1,\r\n        enableFaceGeometry: true,\r\n        minDetectionConfidence: 0.5,\r\n        minTrackingConfidence: 0.5,\r\n        refineLandmarks: false,\r\n      });\r\n\r\n      await this.faceMesh.initialize();\r\n    }\r\n  };\r\n\r\n  on_start = (): void => {\r\n    this.canvasElement?.remove();\r\n    this.videoElement?.remove();\r\n\r\n    // Canvas & Video anlegen\r\n    this.canvasElement = document.createElement(\"canvas\");\r\n    this.canvasElement.width = 1280;\r\n    this.canvasElement.height = 720;\r\n\r\n    this.videoElement = document.createElement(\"video\");\r\n    this.videoElement.muted = true;\r\n\r\n    this.mediaStream = this.jsPsych.pluginAPI.getCameraStream();\r\n\r\n    if (!this.mediaStream) {\r\n      console.warn(\r\n        \"The mediapipe-face-mesh extension is trying to start but the camera is not initialized.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    this.videoElement.srcObject = this.mediaStream;\r\n\r\n    this.videoElement.onloadedmetadata = () => {\r\n      this.stopAnimationFrame();\r\n      this.animationFrameId = window.requestAnimationFrame(\r\n        this.processFrame.bind(this)\r\n      );\r\n    };\r\n\r\n    if (!this.usingNewAPI) {\r\n      this.faceMesh.onResults(this.onMediaPipeResult.bind(this));\r\n    }\r\n\r\n    this.videoElement.play();\r\n  };\r\n\r\n  on_load = (params) => {\r\n    this.recordedChunks = [];\r\n    this.recordTracks = params?.record ?? false;\r\n  };\r\n\r\n  on_finish = () => {\r\n    console.log(\"face_mesh tracked chunks: \" + this.recordedChunks.length);\r\n    this.stopAnimationFrame();\r\n    this.recordTracks = false;\r\n    return { face_mesh: this.recordedChunks };\r\n  };\r\n\r\n  private stopAnimationFrame(): void {\r\n    window.cancelAnimationFrame(this.animationFrameId);\r\n  }\r\n\r\n  private async processFrame(): Promise<void> {\r\n    const ctx = this.canvasElement.getContext(\"2d\");\r\n    ctx.drawImage(this.videoElement, 0, 0);\r\n\r\n    if (this.usingNewAPI) {\r\n      const results: FaceLandmarkerResult =\r\n        this.faceLandmarker.detectForVideo(this.videoElement, performance.now());\r\n      this.onFaceLandmarkerResult(results);\r\n    } else {\r\n      await this.faceMesh.send({ image: this.canvasElement });\r\n    }\r\n\r\n    this.animationFrameId = window.requestAnimationFrame(\r\n      this.processFrame.bind(this)\r\n    );\r\n  }\r\n\r\n  public addTrackingResultCallback(callback: (ITrackingResult) => void) {\r\n    this.onResultCallbacks.push(callback);\r\n  }\r\n\r\n  public removeTrackingResultCallback(callback: (ITrackingResult) => void) {\r\n    this.onResultCallbacks.splice(this.onResultCallbacks.indexOf(callback), 1);\r\n  }\r\n\r\n  // Alte API Ergebnisse\r\n  private onMediaPipeResult(results: Results): void {\r\n    if (results.multiFaceGeometry[0]) {\r\n      const transformationMatrix = results.multiFaceGeometry[0]\r\n        .getPoseTransformMatrix()\r\n        .getPackedDataList();\r\n      const rotation = new Euler().setFromRotationMatrix(\r\n        new Matrix4().fromArray(transformationMatrix)\r\n      );\r\n      const translation = new Vector3().setFromMatrixPosition(\r\n        new Matrix4().fromArray(transformationMatrix)\r\n      );\r\n\r\n      const result: IFaceTrackingResult = {\r\n        frame_id: this.animationFrameId,\r\n        transformation: transformationMatrix,\r\n        rotation,\r\n        translation,\r\n      };\r\n\r\n      if (this.recordTracks) this.recordedChunks.push(result);\r\n      this.onResultCallbacks.forEach((cb) => cb(result));\r\n    }\r\n  }\r\n\r\n  // Neue API Ergebnisse\r\n  private onFaceLandmarkerResult(results: FaceLandmarkerResult): void {\r\n    let transformationMatrix, rotation, translation, blendshapes;\r\n\r\n    if (results.facialTransformationMatrixes?.length) {\r\n      transformationMatrix = results.facialTransformationMatrixes[0].data;\r\n      rotation = new Euler().setFromRotationMatrix(\r\n        new Matrix4().fromArray(transformationMatrix)\r\n      );\r\n      translation = new Vector3().setFromMatrixPosition(\r\n        new Matrix4().fromArray(transformationMatrix)\r\n      );\r\n    }\r\n\r\n    if (results.faceBlendshapes?.length) {\r\n      blendshapes = results.faceBlendshapes[0].categories.map((c) => ({\r\n        name: c.categoryName,\r\n        score: c.score,\r\n      }));\r\n    }\r\n\r\n    const result: IFaceTrackingResult = {\r\n      frame_id: this.animationFrameId,\r\n      transformation: transformationMatrix,\r\n      rotation,\r\n      translation,\r\n      blendshapes,\r\n    };\r\n\r\n    if (this.recordTracks) this.recordedChunks.push(result);\r\n    this.onResultCallbacks.forEach((cb) => cb(result));\r\n  }\r\n}\r\n\r\nexport default MediapipeFacemeshExtension;\r\n"],"names":[],"mappings":"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"}